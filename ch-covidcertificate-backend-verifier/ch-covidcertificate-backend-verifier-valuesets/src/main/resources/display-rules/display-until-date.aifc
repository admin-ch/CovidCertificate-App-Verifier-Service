/*
Logic to display valid until date
*/

import "../rule-constants/vaccine.aifc";
import "../rule-constants/test.aifc";
import "../rule-constants/recovery.aifc";

if (payload.v.0) {
    switch(payload.v.0.mp) {
        SINGLE_DOSE_VACCINES : if payload.v.0.dn === 1 => {
             payload.v.0.dt as DateTime + SINGLE_DOSE_VALIDITY_DISPLAY #days
        }
        SINGLE_DOSE_VACCINES : if payload.v.0.dn >= 2 => {
                     payload.v.0.dt as DateTime + TWO_DOSE_VALIDITY_DISPLAY #days
                }
        TOURIST_VACCINES => {
            if (payload.h.exp) {
                /* If we have a tourist certificate, we try to use exp (should be 30 days after iat) */
                min((payload.v.0.dt as DateTime + TWO_DOSE_VALIDITY_DISPLAY #days), payload.h.exp as DateTime + 0#days)
            } else {
                /* Since we should not fail on older versions, just show always one day of validity */
                if ((payload.v.0.dt as DateTime + TWO_DOSE_VALIDITY_DISPLAY #days) is before (now() + 0#days)) {
                    payload.v.0.dt as DateTime + TWO_DOSE_VALIDITY_DISPLAY #days
                } else {
                    /* 
                        We cannot use minimum, to prevent confusion of valid from today until today. 
                        In  this edge case we just show valid from today until tomorrow, though technically not correct
                    */
                    now() + 1#days
                }
            }
        }
       TWO_DOSE_VACCINES : if payload.v.0.dn >= payload.v.0.sd => {
            /* If we have a 2 dose vaccine just show the dt + 364 days */
            payload.v.0.dt as DateTime + TWO_DOSE_VALIDITY_DISPLAY #days
        }
        _ => {
            /* We don't know the validity since this vaccine should not be valid */
            undefined
        }
    }
} else {
    if (payload.t.0) {
        switch (payload.t.0.tt) {
            TEST_TYPE_PCR => {
                /* PCR tests are valid for 72 hours */
                payload.t.0.sc as DateTime + PCR_VALIDITY #hours
            }
            TEST_TYPE_RAT => {
                /* negative RAT tests for 24 hours, positive (recovery) 365days */
                if (payload.t.0.tr === TEST_RESULT_POSITIVE){
                    payload.t.0.sc as DateTime + RECOVERY_VALIDITY #days
                } else {
                    payload.t.0.sc as DateTime + RAT_VALIDITY #hours
                }
            }
            TEST_TYPE_SERO => {
                /* 
                    Test type for people who were infected but did not have PCR test
                    In this case, the certificate is valid for 90 days.

                    The test has to be positive, since it should only ever be valid in switzerland
                 */
                payload.t.0.sc as DateTime + SERO_VALIDITY #days
            }
            TEST_TYPE_EXEMPTION => {
               payload.t.0.sc as DateTime + EXEMPTION_VALIDITY #days
            }
            _ => {
                /* We only support the previous four test types */
                undefined
            }
        }
    } else {
        if (payload.r.0) {
            payload.r.0.fr as DateTime + RECOVERY_VALIDITY_DISPLAY #days
        } else {
            /* There has to be at least a vaccine, or a test or a recovery */
            undefined
        }
    }
}